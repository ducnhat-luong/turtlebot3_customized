<launch>
  <arg name="multi_robot_name" default=""/>
  <arg name="set_lidar_frame_id" default="base_scan"/>

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_core.launch">
    <arg name="multi_robot_name" value="$(arg multi_robot_name)"/>
  </include>

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_lidar.launch">
    <arg name="set_frame_id" value="$(arg set_lidar_frame_id)"/>
  </include>

  <node pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="turtlebot3_diagnostics" output="screen"/>
  <node pkg="led_controller" name="led_control" type="led_control.py" output="screen"/>

  <node pkg="rosserial_python" type="serial_node.py" name="wind_serial" output="screen">
    <param name="port" value="/dev/ttyACM1"/>
    <param name="baud" value="9600"/>
  </node>  
</launch>


<!--param name="laser_scan_topic" value="/laser_scan"/>
<param name="laser_frame_id" value="laser_stage" />
<param name="odom_topic" value="/odom"/>
<param name="odom_frame_id" value="odom" />    
<param name="disable_odometry" value="false" /-->

<!--include file="$(find test_env)/$(arg scenario)/launch/ros/simbot_move_base.launch" />  
    
    <node pkg="fake_localization" type="fake_localization" name="fake_localization">	    
        <param name="odom_frame_id" value="odom"/>
        <param name="global_frame_id" value="map"/>
        <param name="base_frame_id" value="base_link"/>
    </node-->